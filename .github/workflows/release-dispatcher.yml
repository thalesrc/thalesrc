name: Release Dispatcher

on:
  release:
    types: [created]

jobs:
  dispatch:
    runs-on: ubuntu-latest
    steps:
      - name: Determine library and dispatch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME="${{ github.ref_name }}"
          REPO="${{ github.repository }}"

          echo "Processing release tag: $TAG_NAME"

          # Map tag prefixes to library names
          case "$TAG_NAME" in
            dom-utils-v*)
              LIBRARY="dom-utils"
              ;;
            drag-drop-v*)
              LIBRARY="drag-drop"
              ;;
            js-utils-v*)
              LIBRARY="js-utils"
              ;;
            extra-ts-types-v*)
              LIBRARY="extra-ts-types"
              ;;
            node-utils-v*)
              LIBRARY="node-utils"
              ;;
            nx-utils-v*)
              LIBRARY="nx-utils"
              ;;
            react-utils-v*)
              LIBRARY="react-utils"
              ;;
            reactive-storage-v*)
              LIBRARY="reactive-storage"
              ;;
            rx-utils-v*)
              LIBRARY="rx-utils"
              ;;
            ts-utils-v*)
              LIBRARY="ts-utils"
              ;;
            *)
              echo "❌ No matching library found for tag: $TAG_NAME"
              echo "Expected format: <library-name>-v<version>"
              exit 0
              ;;
          esac

          echo "✅ Dispatching publish event for library: $LIBRARY"

          # Create JSON payload file
          cat > payload.json << EOF
          {
            "event_type": "publish-$LIBRARY",
            "client_payload": {
              "tag": "$TAG_NAME",
              "library": "$LIBRARY"
            }
          }
          EOF

          # Trigger the specific library's publish workflow
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "/repos/$REPO/dispatches" \
            --input payload.json
